== 0.2 Release

- when mapping ugen args don't map if a non keyword value is there...

- make things work where there are multiple "roots" in a synthdef graph

== General:

* add a description property to the ugen specs using the info in docs/ugens, and 
add some machinery to add this to the :doc metadata.

* Add a runtime shutdown hook that calls shutdown callbacks to close the server
and do anything else necessary.

* create a function that prints out the currently running synths

== Synths and Audio:

* implement the rest of the argument modes for ugens, as described in
  docs/dev/core/ugen_definition.mdml.
 (currently there is just :append-seq)

* Test and expand the Scope synth to support really nice audio and fft data
visualization.
 - also create level meter, pan, and EQ synths

* Create a fully native Clojure implementation of the SuperCollider interface on top of Java sound
so we can run inside of the browser, on phones, etc...

== Midi and Devices:

* Start thinking about some kind of generic device layer abstraction so we can
simplify the task of adding support for new controllers.  Maybe we can have a
learn mode where you plug in a device, hit learn, and then it builds a
configuration profile for your device by letting you hit controls and then
optionally label things or something...

* Put some nice error messages in the midi code so you know when you pass the wrong type of device, etc... 

== OSC: 

* complete implementation of osc bundle reception, and beef up the unit tests
 - bundles need to be recursively decoded
 - should return a collection of packets, and each bundle and message should have the src-host and src-port attached so we can reply to anything.

== GUI

* Create a node based synthdef viewer, and then editor

== Dynamic Editor

* accesses functions from 

== Networking

* search, browse and download remote synth libraries 
