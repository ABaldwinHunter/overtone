* Figure out how to handle multi-channel stuff

* Put some nice error messages in the midi code so you know when you pass the wrong type of device, etc... 

* although many Clojure arithmetic operators can take more than two args, we need
to convert these to binary-op-ugens for supercollider.  
  - so this: (+ foo bar baz) should become this (+ foo (+ bar baz))

* setup an on-boot handler mechanism so we can load up synthdefs, connect
status machinery, etc...

* make the id counters in overtone.sc use a smarter algorithm so they can
reuse old IDs.

* automatically recognize when binary-op-ugens need to be expanded across 
argument lists greater than two.  (e.g. (+ :foo snd1 snd2) becomes (+ :foo (+ snd1 snd2)))

* IDEA: can the general concept of a ugen function be abstracted so that custom ugen functions like a mixer or
some other thing can easily be defined in Clojure?
